/**
 * fn-type - Get the type of something. Seriously.
 * @version v1.3.0
 * @link    https://github.com/Kikobeats/fn-type
 * @license MIT
 */require=function r(e,t,n){function a(i,u){if(!t[i]){if(!e[i]){var f="function"==typeof require&&require;if(!u&&f)return f(i,!0);if(o)return o(i,!0);var p=new Error("Cannot find module '"+i+"'");throw p.code="MODULE_NOT_FOUND",p}var c=t[i]={exports:{}};e[i][0].call(c.exports,function(r){var t=e[i][1][r];return a(t?t:r)},c,c.exports,r,e,t,n)}return t[i].exports}for(var o="function"==typeof require&&require,i=0;i<n.length;i++)a(n[i]);return a}({"fn-type":[function(r,e,t){"use strict";function n(r){if(null==r)return String(r);var e=Object.prototype.toString.call(r).replace(a,"").replace(o,"").toLowerCase();return-1!==n.types.indexOf(e)?e:new Error("?unsupported?:"+e)}var a=/^\[Object\s/i,o=/\]$/;n.types=["arguments","array","arraybuffer","boolean","date","error","float32array","float64array","function","generatorfunction","int16array","int32array","int8array","map","number","object","regexp","set","string","symbol","uint16array","uint32array","uint8array","uint8clampedarray","weakmap","weakset"],e.exports=n},{}]},{},[]);