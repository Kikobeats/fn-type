/**
 * fn-type - Get the type of something. Seriously.
 * @version v1.2.0
 * @link    https://github.com/Kikobeats/fn-type
 * @license MIT
 */require=function r(t,e,a){function o(c,i){if(!e[c]){if(!t[c]){var u="function"==typeof require&&require;if(!i&&u)return u(c,!0);if(n)return n(c,!0);var y=new Error("Cannot find module '"+c+"'");throw y.code="MODULE_NOT_FOUND",y}var b=e[c]={exports:{}};t[c][0].call(b.exports,function(r){var e=t[c][1][r];return o(e?e:r)},b,b.exports,r,t,e,a)}return e[c].exports}for(var n="function"==typeof require&&require,c=0;c<a.length;c++)o(a[c]);return o}({"fn-type":[function(r,t,e){"use strict";var a=function(r){if(void 0===r||null===r)return String(r);var t={"[object Arguments]":"arguments","[object Array]":"array","[object ArrayBuffer]":"arraybuffer","[object Boolean]":"boolean","[object Date]":"date","[object Error]":"error","[object Float32Array]":"float32array","[object Float64Array]":"float64array","[object Function]":"function","[object GeneratorFunction]":"generatorfunction","[object Int16Array]":"int16array","[object Int32Array]":"int32array","[object Int8Array]":"int8array","[object Map]":"map","[object Number]":"number","[object Object]":"object","[object RegExp]":"regexp","[object Set]":"set","[object String]":"string","[object Symbol]":"symbol","[object Uint16Array]":"uint16array","[object Uint32Array]":"uint32array","[object Uint8Array]":"uint8array","[object Uint8ClampedArray]":"uint8clampedarray","[object WeakMap]":"weakmap","[object WeakSet]":"weakset"};return t[Object.prototype.toString.call(r)]};t.exports=a,t.exports.types=["arguments","array","arraybuffer","boolean","date","error","float32array","float64array","function","generatorfunction","int16array","int32array","int8array","map","number","object","regexp","set","string","symbol","uint16array","uint32array","uint8array","uint8clampedarray","weakmap","weakset"]},{}]},{},[]);